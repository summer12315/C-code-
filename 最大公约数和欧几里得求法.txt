最大公约数（GCD）：

最大公约数是指能够同时整除两个整数的最大正整数。例如，12和18的最大公约数是6，因为6是能同时整除12和18的最大正整数。
欧几里得算法：

欧几里得算法基于以下观察：对于两个整数 a 和 b（其中 a > b），它们的最大公约数等于 b 和 a 除以 b 的余数（即 a % b）的最大公约数。
用数学公式表示就是：gcd(a, b) = gcd(b, a % b)。
示例：
假设我们要计算 gcd(48, 18)：

第一次迭代：
a = 48，b = 18。
a % b = 48 % 18 = 12。
所以，gcd(48, 18) = gcd(18, 12)。
第二次迭代：
a = 18，b = 12。
a % b = 18 % 12 = 6。
所以，gcd(18, 12) = gcd(12, 6)。
第三次迭代：
a = 12，b = 6。
a % b = 12 % 6 = 0。
当 b 变为0时，a 的值就是最大公约数，即 gcd(12, 6) = 6。

代码实现：
/ 函数：判断两个数是否互质
int isCoprime(long long a, long long b) {
    // 临时变量，用于交换a和b的值
    long long temp;
    // 当b不为0时，继续循环
    while (b != 0) {
        // 将b的值赋给temp
        temp = b;
        // 将a除以b的余数赋给b
        b = a % b;
        // 将temp的值赋给a
        a = temp;
    }
    // 如果a等于1，则a和b互质，返回1；否则返回0
    return a == 1;
}
互质是指两个数的最大公约数为1，即它们除了1以外没有其他的公因数。